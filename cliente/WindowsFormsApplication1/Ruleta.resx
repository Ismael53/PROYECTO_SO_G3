<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox4.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>